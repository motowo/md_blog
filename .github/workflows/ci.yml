name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/**'
  push:
    branches: [ 'feature/**' ]
    paths:
      - 'frontend/**'
      - '.github/workflows/**'

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  frontend:
    name: Frontend CI (ESLint, Prettier, Tests)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint

      - name: Run Prettier (check)
        working-directory: frontend
        run: npm run format:check || echo "NEEDS_FORMAT=true" >> $GITHUB_ENV

      - name: Run Prettier (format)
        if: env.NEEDS_FORMAT == 'true'
        working-directory: frontend
        run: npm run format

      - name: Run tests
        working-directory: frontend
        run: npm run test

      - name: Build project
        working-directory: frontend
        run: npm run build

      - name: Commit formatted files
        if: env.NEEDS_FORMAT == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add frontend/
          git diff --staged --quiet || git commit -m "style: auto-format frontend code

          ü§ñ Generated with [Claude Code](https://claude.ai/code)

          Co-Authored-By: Claude <noreply@anthropic.com>"

      - name: Push changes
        if: env.NEEDS_FORMAT == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}


  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [frontend]
    if: always()
    
    steps:
      - name: Summary
        run: |
          echo "Frontend CI: ${{ needs.frontend.result }}"
          
          if [[ "${{ needs.frontend.result }}" == "failure" ]]; then
            echo "‚ùå Frontend CI checks failed"
            exit 1
          else
            echo "‚úÖ Frontend CI checks passed"
          fi